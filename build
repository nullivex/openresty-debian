#!/bin/bash

NGXLUAVERSION="0.10.6"
OPENRESTYVERSION="1.11.2.1"
OPENSSLVERSION="1.0.2h"
PCREVERSION="8.39"
ZLIBVERSION="1.2.8"
LUAJITVERSION="2.1.0-beta2"
LUAROCKSVERSION="2.4.1"

echo "Openresty Debian Builder 0.1.0"
echo "--------"
echo "Nginx Lua Version: ${NGXLUAVERSION}"
echo "Openresty Version: ${OPENRESTYVERSION}"
echo "OpenSSL Version: ${OPENSSLVERSION}"
echo "PCRE Version: ${PCREVERSION}"
echo "ZLIB Version: ${ZLIBVERSION}"
echo "Lua JIT Version: ${LUAJITVERSION}"
echo "Lua Rocks Version: ${LUAROCKSVERSION}"
echo "--------"
read -p "Update system for build, this is meant for a dev system, continue? (y/n)" -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
  [[ "$0" = "$BASH_SOURCE" ]] && exit 1 || return 1 # handle exits
fi

apt-get -y update
apt-get -y install wget unzip build-essential ruby-dev libreadline6-dev libncurses5-dev perl rubygems
gem install fpm

# save versions to save on effort
# setup the workdir
echo "Setting up working dir..."
OURDIR="/opt/openresty-debian"
WORKDIR="/tmp/openresty-debian-build"
BUILDIR="$WORKDIR/build"
BUILDROOT="$BUILDIR/root"

rm -rf $BUILDIR
mkdir -p $BUILDROOT
cd $BUILDIR

echo "Downloading packages..."
wget -O openresty-${OPENRESTYVERSION}.tar.gz https://openresty.org/download/openresty-${OPENRESTYVERSION}.tar.gz
tar xfz openresty-${OPENRESTYVERSION}.tar.gz

wget -O openssl-${OPENSSLVERSION}.tar.gz https://www.openssl.org/source/openssl-${OPENSSLVERSION}.tar.gz
tar xfz openssl-${OPENSSLVERSION}.tar.gz

wget -O "pcre-${PCREVERSION}.tar.gz" "http://downloads.sourceforge.net/project/pcre/pcre/${PCREVERSION}/pcre-${PCREVERSION}.tar.gz?r=https%3A%2F%2Fsourceforge.net%2Fprojects%2Fpcre%2Ffiles%2Fpcre%2F${PCREVERSION}%2F&ts=1478753230&use_mirror=pilotfiber"
tar xfz pcre-${PCREVERSION}.tar.gz

wget -O zlib-${ZLIBVERSION}.tar.gz http://zlib.net/zlib-${ZLIBVERSION}.tar.gz
tar xfz zlib-${ZLIBVERSION}.tar.gz

wget -O LuaJIT-${LUAJITVERSION}.tar.gz http://luajit.org/download/LuaJIT-${LUAJITVERSION}.tar.gz
tar xfz LuaJIT-${LUAJITVERSION}.tar.gz

wget -O luarocks-${LUAROCKSVERSION}.tar.gz https://keplerproject.github.io/luarocks/releases/luarocks-${LUAROCKSVERSION}.tar.gz
tar xfz luarocks-${LUAROCKSVERSION}.tar.gz

# Compile and install openresty
echo "Compiling openresty..."
cd $BUILDIR/openresty-${OPENRESTYVERSION}
./configure \
  --with-http_ssl_module \
  --with-http_stub_status_module \
  --with-http_gzip_static_module \
  --with-debug \
  --with-openssl=$BUILDIR/openssl-${OPENSSLVERSION} \
  --with-pcre=$BUILDIR/pcre-${PCREVERSION} \
  --with-pcre-jit \
  --with-zlib=$BUILDIR/zlib-${ZLIBVERSION} \
  --with-cc-opt='-O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2' \
  --with-ld-opt='-Wl,-Bsymbolic-functions -Wl,-z,relro' \
  --prefix=/usr/share/nginx \
  --sbin-path=/usr/sbin/nginx \
  --conf-path=/etc/nginx/nginx.conf \
  --http-log-path=/var/log/nginx/access.log \
  --error-log-path=/var/log/nginx/error.log \
  --lock-path=/var/lock/nginx.lock \
  --pid-path=/run/nginx.pid \
  --http-client-body-temp-path=/var/lib/nginx/body \
  --http-fastcgi-temp-path=/var/lib/nginx/fastcgi \
  --http-proxy-temp-path=/var/lib/nginx/proxy \
  --http-scgi-temp-path=/var/lib/nginx/scgi \
  --http-uwsgi-temp-path=/var/lib/nginx/uwsgi \
  --user=www-data \
  --group=www-data
make -j${nproc}
make install DESTDIR=$BUILDROOT

# Compile LuaRocks
echo "Compiling Luarocks..."
mkdir -p $BUILDIR/usr/share/nginx
ln -s $BUILDROOT/usr/share/nginx/luajit $BUILDIR/usr/share/nginx/luajit
cd $BUILDIR/luarocks-${LUAROCKSVERSION}
./configure \
  --prefix=$BUILDIR/usr/share/nginx/luajit \
  --with-lua=$BUILDIR/usr/share/nginx/luajit \
  --lua-suffix=jit-${LUAJITVERSION} \
  --with-lua-include=$BUILDROOT/usr/share/nginx/luajit/include/luajit-2.1 \
  --with-downloader=wget \
  --with-md5-checker=openssl
make build
make install DESTDIR=$BUILDROOT
rm -rf $BUILDIR/usr/share/nginx

mkdir $BUILDIR/nginx-scripts $BUILDIR/nginx-conf
cp $OURDIR/scripts/* $BUILDIR/nginx-scripts
cp $OURDIR/conf/* $BUILDIR/nginx-conf

# Add extras to the build root
echo "Populating build root..."
cd $BUILDROOT
mkdir etc/init.d etc/logrotate.d etc/nginx/sites-available etc/nginx/sites-enabled var/lib var/lib/nginx

mv usr/share/nginx/bin/resty usr/sbin/resty
rm -rf usr/share/nginx/bin

mv usr/share/nginx/nginx/html usr/share/nginx/html
rm -rf usr/share/nginx/nginx

cp -R $BUILDIR/openresty-${OPENRESTYVERSION}/bundle/ngx_lua-${NGXLUAVERSION} usr/share/nginx/lualib
rm etc/nginx/*.default

cp $BUILDIR/nginx-scripts/init etc/init.d/nginx
chmod +x etc/init.d/nginx

cp $BUILDIR/nginx-conf/logrotate etc/logrotate.d/nginx
cp $BUILDIR/nginx-conf/nginx.conf etc/nginx/nginx.conf
cp $BUILDIR/nginx-conf/default etc/nginx/sites-available/default

# Build deb
echo "Building debian package..."
fpm -s dir -t deb \
  --deb-no-default-config-files \
  -n openresty \
  -v ${OPENRESTYVERSION} \
  -C $BUILDROOT \
  -p openresty_VERSION_ARCH.deb \
  --description 'a high performance web server and a reverse proxy server' \
  --url 'http://openresty.org/' \
  --category httpd \
  --maintainer 'Bryan Tong <bryan@nullivex.com>' \
  --depends wget \
  --depends unzip \
  --depends libncurses5 \
  --depends libreadline6 \
  --deb-build-depends build-essential \
  --replaces 'nginx-full' \
  --provides 'nginx-full' \
  --conflicts 'nginx-full' \
  --replaces 'nginx-common' \
  --provides 'nginx-common' \
  --conflicts 'nginx-common' \
  --after-install $BUILDIR/nginx-scripts/postinstall \
  --before-install $BUILDIR/nginx-scripts/preinstall \
  --after-remove $BUILDIR/nginx-scripts/postremove \
  --before-remove $BUILDIR/nginx-scripts/preremove \
  etc run usr var

mkdir $OURDIR/artifacts
cp $BUILDROOT/*.deb $OURDIR/artifacts
rm -rf $WORKDIR

echo "$OURDIR/artifacts"
ls -l $OURDIR/artifacts

echo "Debian build complete"
